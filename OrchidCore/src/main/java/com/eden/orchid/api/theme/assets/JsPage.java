// Generated by delombok at Sun Mar 24 19:34:08 CDT 2019
package com.eden.orchid.api.theme.assets;

import com.eden.orchid.api.options.annotations.Description;
import com.eden.orchid.api.options.annotations.Option;
import com.eden.orchid.api.resources.resource.InlineResource;
import com.eden.orchid.api.resources.resource.OrchidResource;

@Description(value = "A Javascript static asset.", name = "JS Asset")
public final class JsPage extends AssetPage {
    @Option
    private boolean async;
    @Option
    private boolean defer;
    @Option
    private boolean module;

    public JsPage(Object source, String sourceKey, OrchidResource resource, String key, String title) {
        super(source, sourceKey, resource, key, title);
    }

    public String renderAssetToPage() {
        if (resource instanceof InlineResource) {
            return "<script>\n" + resource.compileContent(this) + "\n</script>";
        } else {
            String tagString = "<script";
            if (async) {
                tagString += " async";
            }
            if (defer) {
                tagString += " defer";
            }
            if(module){
               tagString += " module"; 
            }
            tagString += " src=\"" + this.getLink() + "\"";
            tagString += "></script>";
            return tagString;
        }
    }

    public boolean isAsync() {
        return this.async;
    }

    public void setAsync(final boolean async) {
        this.async = async;
    }

    public boolean isDefer() {
        return this.defer;
    }

    public void setDefer(final boolean defer) {
        this.defer = defer;
    }
    public boolean isModule() {
        return this.module;
    }

    public void setModule(final boolean module) {
        this.module = module;
    }
}
